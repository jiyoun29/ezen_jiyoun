package Day15;

public class day15_1 { //사람, 학생

	/*클래스 : 객체 설계도
		객체 : 클래스기반으로 메모리 할당
			기본자료형/클래스 변수명; 						[ String 이름 ; ] -> 변수
			기본자료형/클래스 객체명 = new 클래스생성자(); 		[ String 이름 ; = new String(""); ] -> 객체
			**new 반드시 써서 메모리를 할당 받아 객체를 사용
			*new를 안 쓰면 변수	
	
	상속 : 설계도 연장[extends] ( 모범 설계도를 이어서 새로운 설계할 때 필요 )
	@ 사용하지 않아도 설계는 가능. 허나 규모가 큰 설계도에 필요.
		선언 방식 : public class 자식 클래스 extends 부모클래스 { }
		상속을 준 것 : 부모클래스(수퍼클래스) : 부모 클래스 내 멤버를 자식 클래스에게 상속(물려주기)
		상속을 받은 것 : 자식클래스(서브클래스) : 부모 클래스 내 멤버를 사용 가능
			this: 자식 것을 나에게 데려올 때.
			super: 부모 것을 부를 때.
			**차이점 인지
		자식 클래스로 객체 생성 시 : 부모클래스 내 생성자 먼저 호출
		
		모든클래스 : Object 클래스
			모든 클래스는 Object 생성자를 호출한다. [ 100% 객체지향을 위해서 ]
			
			
		자바의 특징 중 하나 : 다형성
			하나의 객체가 여러가지 타입으로 변환되는 것
			
	*/
	
	public static void main(String[] args) {
		
		//1.부모클래스로 객체 생성
		사람 p1 = new 사람("유재석");
		p1.이름 = "유재석" ;
			//부모는 자식에게 접근 불가능
		p1.이름호출();
		// ->객체
		

		//2.자식클래스로 객체 생성
		학생 p2 = new 학생("유재석");
		p2.이름 = "강호동";
			//자식은 부모에게 접근이 가능
		p2.이름호출();
		
		
		//부모 클래스 내 부부모 클래스에 접근
		p2.직업 = "학생";
		
		//다형성 객체
		직업 j1 = new 학생("유재석");
		//부모클래스 객체 = 자식객체 
		// 학생 p3 = new 직업(); //부불가
		//자식클래스 객체 = 부모클래스
		// @자식은 부모가 될 수 있어도 부모는 자식이 될 수 없다
		//방향*************
		
		
		
		
	}
}
